orbs:
  go: circleci/go@1.11

# The "sign binary" rubs in a MacOS environment, so it's necessary to download GW's binaries
env: &env
  environment:
    GRUNTWORK_INSTALLER_VERSION: v0.0.39
    MODULE_CI_VERSION: v0.57.0
    TERRAFORM_VERSION: "1.11.3"
    TFLINT_VERSION: "0.47.0"

defaults: &defaults
  docker:
    - image: 087285199408.dkr.ecr.us-east-1.amazonaws.com/circle-ci-test-image-base:go1.24.4-tf1.5-tg58.8-pck1.8-ci58.2

version: 2.1
jobs:
  build:
    resource_class: xlarge
    <<: *defaults
    steps:
      - checkout
      - run: build-go-binaries --app-name terragrunt --dest-path bin --ld-flags "-s -w -X github.com/gruntwork-io/go-commons/version.Version=$CIRCLE_TAG -extldflags '-static'"
      - persist_to_workspace:
          root: .
          paths: [bin]

  test_signing:
    <<: *env
    macos:
      xcode: 15.3.0
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - attach_workspace:
          at: .
      - go/install:
          version: "1.24.4"
      - run:
          name: Install sign-binary-helpers
          command: |
            curl -Ls https://raw.githubusercontent.com/gruntwork-io/gruntwork-installer/v0.0.40/bootstrap-gruntwork-installer.sh | bash /dev/stdin --version "${GRUNTWORK_INSTALLER_VERSION}"
            gruntwork-install --module-name "gruntwork-module-circleci-helpers" --repo "https://github.com/gruntwork-io/terraform-aws-ci" --tag "${MODULE_CI_VERSION}"
            gruntwork-install --module-name "sign-binary-helpers" --repo "https://github.com/gruntwork-io/terraform-aws-ci" --tag "${MODULE_CI_VERSION}"
      - run:
          name: Compile and sign the binaries
          command: |
            export AC_PASSWORD=${MACOS_AC_PASSWORD}
            export AC_PROVIDER=${MACOS_AC_PROVIDER}

            sign-binary --os mac --install-macos-sign-dependencies .gon_amd64.hcl
            sign-binary --os mac .gon_arm64.hcl
            echo "Done signing the binary"

            # Replace the files in bin. These are the same file names generated from .gon_amd64.hcl and .gon_arm64.hcl
            unzip terragrunt_darwin_amd64.zip
            mv terragrunt_darwin_amd64 bin/

            unzip terragrunt_darwin_arm64.zip
            mv terragrunt_darwin_arm64 bin/

            codesign -dv --verbose=4 ./bin/terragrunt_darwin_amd64
            codesign -dv --verbose=4 ./bin/terragrunt_darwin_arm64

  deploy:
    <<: *env
    macos:
      xcode: 15.3.0
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - attach_workspace:
          at: .
      - go/install:
          version: "1.24.4"
      - run:
          name: Install sign-binary-helpers
          command: |
            curl -Ls https://raw.githubusercontent.com/gruntwork-io/gruntwork-installer/v0.0.40/bootstrap-gruntwork-installer.sh | bash /dev/stdin --version "${GRUNTWORK_INSTALLER_VERSION}"
            gruntwork-install --module-name "gruntwork-module-circleci-helpers" --repo "https://github.com/gruntwork-io/terraform-aws-ci" --tag "${MODULE_CI_VERSION}"
            gruntwork-install --module-name "sign-binary-helpers" --repo "https://github.com/gruntwork-io/terraform-aws-ci" --tag "${MODULE_CI_VERSION}"
      - run:
          name: Compile and sign the binaries
          command: |
            export AC_PASSWORD=${MACOS_AC_PASSWORD}
            export AC_PROVIDER=${MACOS_AC_PROVIDER}

            sign-binary --os mac --install-macos-sign-dependencies .gon_amd64.hcl
            sign-binary --os mac .gon_arm64.hcl
            echo "Done signing the binary"

            # Replace the files in bin. These are the same file names generated from .gon_amd64.hcl and .gon_arm64.hcl
            unzip terragrunt_darwin_amd64.zip
            mv terragrunt_darwin_amd64 bin/

            unzip terragrunt_darwin_arm64.zip
            mv terragrunt_darwin_arm64 bin/
      - run:
          name: Run SHA256SUM
          command: |
            brew install coreutils
            cd bin && sha256sum * > SHA256SUMS
      - run: upload-github-release-assets bin/*
      - run:
          name: Verify that assets attached to the release
          command: |
            ./_ci/verify-release-assets.sh

workflows:
  version: 2
  build-and-test:
    jobs:
      - build:
          filters:
            tags:
              only:
                - /^v.*/
                - /^alpha.*/
          context:
            - AWS__PHXDEVOPS__circle-ci-test
            - GCP__automated-tests
            - GITHUB__PAT__gruntwork-ci
      - test_signing:
          requires:
            - build
          filters:
            tags:
              only:
                - /^v.*/
                - /^alpha.*/
          context:
            - AWS__PHXDEVOPS__circle-ci-test
            - GCP__automated-tests
            - GITHUB__PAT__gruntwork-ci
            - APPLE__OSX__code-signing
      - deploy:
          requires:
            - build
          filters:
            tags:
              only:
                - /^v.*/
                - /^alpha.*/
            branches:
              ignore: /.*/
          context:
            - AWS__PHXDEVOPS__circle-ci-test
            - GCP__automated-tests
            - GITHUB__PAT__gruntwork-ci
            - APPLE__OSX__code-signing
