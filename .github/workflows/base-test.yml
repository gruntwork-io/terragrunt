name: Base Tests

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable Windows long paths
        if: matrix.os == 'windows'
        run: ./.github/scripts/windows-setup.ps1
        shell: pwsh

      - name: Use mise to install dependencies
        uses: jdx/mise-action@v2
        with:
          version: 2025.4.4
        env:
          # Adding token here to reduce the likelihood of hitting rate limit issues.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)" >> "$GITHUB_OUTPUT"
          echo "go-mod=$(go env GOMODCACHE)" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Go Build Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-base-test-${{ hashFiles('**/go.sum') }}

      - name: Go Mod Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-base-test-${{ hashFiles('**/go.sum') }}

      - name: Run Tests (Non-Windows)
        if: matrix.os != 'windows'
        run: |
          go test -v $(go list ./... | grep -v "/test/") ./...
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Windows Tests
        if: matrix.os == 'windows'
        run: |
          # Run Windows-specific tests
          go test -tags windows -v -run ^TestWindows ./... -timeout 45m
          # Run all tests except those in test directory
          go test -v -tags windows $(go list ./... | grep -v "/test/") -timeout 45m
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}