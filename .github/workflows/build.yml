name: Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build (${{ matrix.os }}/${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
          - os: linux
            arch: "386"
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: windows
            arch: "386"
          - os: windows
            arch: amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use mise to install dependencies
        uses: jdx/mise-action@v2
        with:
          version: 2025.4.4
          experimental: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)" >> "$GITHUB_OUTPUT"

      - name: Go Build Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}-${{ matrix.os }}-${{ matrix.arch }}

      - name: Build Terragrunt
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          OUTPUT="bin/terragrunt-${GOOS}-${GOARCH}"
          if [ "${GOOS}" = "windows" ]; then
            OUTPUT="${OUTPUT}.exe"
          fi
          go build -o "${OUTPUT}" \
            -ldflags "-s -w -X github.com/gruntwork-io/go-commons/version.Version=${GITHUB_REF_NAME} -extldflags '-static'" \
            .

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terragrunt-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            bin/terragrunt-${{ matrix.os }}-${{ matrix.arch }}*

  sign:
    name: Sign Binaries
    needs: build
    runs-on: macos-latest
    env:
      MISE_PROFILE: cicd
      GON_VERSION: v0.0.37

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin/

      - name: Use mise to install dependencies
        uses: jdx/mise-action@v2
        with:
          version: 2025.4.4
          experimental: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache gon binary
        id: cache-gon
        uses: actions/cache@v4
        with:
          path: gon
          key: gon-${{ env.GON_VERSION }}

      - name: Download gon release
        if: steps.cache-gon.outputs.cache-hit != 'true'
        run: |
          curl -L -o gon.zip https://github.com/Bearer/gon/releases/download/${GON_VERSION}/gon_macos.zip
          unzip gon.zip
          chmod +x gon

      - name: Move gon to system path
        run: |
          sudo mv gon /usr/local/bin/gon
          sudo chmod +x /usr/local/bin/gon

      - name: Run gon as test
        run: |
          gon --version

      - name: Show downloaded binaries
        run: |
          ls -lh bin/
          find bin/ -type f -exec file {} \\;
