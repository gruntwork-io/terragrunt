/* These styles apply to all "custom pages" per https://starlight.astro.build/guides/css-and-tailwind/#use-multiple-tailwind-configurations.
   The idea is that we have two categories of pages on the site:
   
   1. Standard starlight pages (e.g. /docs/features/units)
   2. Custom pages (e.g. /)

   Starlight pages should receive the standard Starlight styles, plus whatever modifications we make in global.css.

   Custom pages should have an "alternate" set of styles. Ideally, these would be completely separate, or explicitly build
   on the Starlight styles, but as of Sep 7, 2025, globals.css is a bit of a mess. So for now, this is a starting approach to keep
   styles separate.
*/

/* Why use @layer components? Because we want these styles to apply after the "base," "starlight," and "theme" layers, but still 
   be overridable by any tailwind utility clasess that are declared directly on the HTML element.
*/
@layer components {
    
    /* Link styling */
    a {
        color: var(--color-accent-1);
        text-decoration: underline;
        text-decoration-color: var(--color-accent-1);
        transition: color 0.2s ease, text-decoration-color 0.2s ease;
    }
    a:hover {
        color: var(--sl-color-accent);
        text-decoration-color: var(--sl-color-accent);
    }

    /* Buttons */
    :is(a, button).primary-button {
        background-color: var(--color-accent-1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 8px;
        box-shadow: 0 0 15px 0 rgba(137, 107, 255, 0.30),
                    0 0 1px 4px rgba(52, 49, 27, 0.22),
                    0 0 1px 4px rgba(52, 49, 47, 0.22);
        color: white;
        font-family: var(--font-sans);
        font-size: 14px;
        font-weight: 400;
        padding: 10px 24px;
        text-decoration: none;
      }
      
      :is(a, button).primary-button.light {
        background-color: var(--color-primary-button-light);
      }

      :is(a, button).primary-button:hover {
        cursor: pointer;
        background-color: var(--color-accent);
        transition: .25s ease-in-out;
      }
      
      :is(a, button).secondary-button {
        background-color: var(--color-bg-dark);
        border: 1px solid var(--color-gray-2);
        border-radius: 8px;
        box-shadow: 0 0 15px 0 rgba(255, 255, 255, 0.05),
                    0 0 1px 4px rgba(52, 49, 27, 0.22);
        color: white;
        font-family: var(--font-sans);
        font-size: 14px;
        font-weight: 400;
        padding: 10px 24px;
        text-decoration: none;
      }
      
      :is(a, button).secondary-button:hover {
        cursor: pointer;
        background-color: rgba(255, 255, 255, 0.05);
        transition: .25s ease-in-out;
      }
      
      /* Apply to both anchor and button elements when they have either the primary-button or secondary-button class */
      :is(a, button):is(.primary-button, .secondary-button):focus {
        outline: 2px solid var(--color-accent-1);
        outline-offset: 2px;
      }

      :is(a, button):is(.primary-button, .secondary-button):focus-visible {
        outline: 2px solid var(--color-accent-1);
        outline-offset: 2px;
      }
}